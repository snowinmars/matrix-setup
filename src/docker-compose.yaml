version: '3.8'
services:
  matrix-postgres:
    container_name: matrix-postgres
    image: snowinmars/matrix-postgres:1.0.0
    hostname: matrix-postgres
    build:
      context: ./postgres
      dockerfile: ./Dockerfile
    # restart: unless-stopped
    volumes:
      - ./postgres/postgresdata:/var/lib/postgresql/data
    # These will be used in homeserver.yaml later on
    environment:
      - POSTGRES_DB=synapse
      - POSTGRES_USER=synapse
      - POSTGRES_PASSWORD=kljfdgkjbflkbjnlkdjfhg
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 10s
      start_interval: 5s
    
  matrix-synapse:
    container_name: matrix-synapse
    image: snowinmars/matrix-synapse:1.0.0
    hostname: matrix-synapse
    build:
      context: ./synapse
      dockerfile: ./Dockerfile
    depends_on:
      matrix-postgres:
        condition: service_healthy
    ports:
    # only 8448 port should be exposed to host: google 'federation tester'. If you don't need it, do not expose the port.
      - '8448:8448'
    # restart: unless-stopped
    volumes:
      - ./synapse:/data
    healthcheck:
      test: ["CMD", "curl", "-fSs", "http://localhost:8008/health"]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 10s
      start_interval: 5s

  matrix-element:
    container_name: matrix-element
    image: snowinmars/matrix-element:1.0.0
    hostname: matrix-element
    build:
      context: ./element
      dockerfile: ./Dockerfile
    depends_on:
      matrix-synapse:
        condition: service_healthy
    # restart: unless-stopped
    volumes:
      - ./element/config.json:/app/config.json
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 10s
      start_interval: 5s

  matrix-ngx:
    container_name: matrix-ngx
    image: snowinmars/matrix-ngx:1.0.0
    hostname: matrix-ngx
    # restart: unless-stopped
    build:
      context: ./ngx
      dockerfile: ./Dockerfile
    depends_on:
      matrix-element:
        condition: service_healthy
    volumes:
      - ./ngx/default.conf:/etc/nginx/conf.d/default.conf
      - ./ngx/https.conf:/etc/nginx/https.conf
      - ./ngx/cors.conf:/etc/nginx/cors.conf
      - ./ngx/acme-challenge:/var/www/html/acme-challenge
      - ./crt/letsencrypt:/etc/letsencrypt
    healthcheck:
      test: ["CMD-SHELL", "wget -O /dev/null http://localhost || exit 1"]
      interval: 10s
      timeout: 10s
      retries: 2
      start_period: 10s
      start_interval: 5s

  wireguard:
    container_name: wireguard
    image: snowinmars/wireguard:1.0.0
    hostname: wireguard
    build:
      context: ./wireguard
      dockerfile: ./Dockerfile
    depends_on:
      matrix-ngx:
        condition: service_healthy
    # restart: unless-stopped
    ports:
      - 51820:51820/udp
    volumes:
      - ./wireguard:/config
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SERVERURL=localhost
      - SERVERPORT=51820
      - PEERS=1
      - PEERDNS=auto
      - INTERNAL_SUBNET=10.13.13.0
      - ALLOWEDIPS=0.0.0.0/0 #optional
      - PERSISTENTKEEPALIVE_PEERS=all #optional
      - LOG_CONFS=true #optional

networks:
  default:
    driver: bridge